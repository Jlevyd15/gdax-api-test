!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
PublicClient	index.js	/^var PublicClient        = require('.\/lib\/clients\/public.js');$/;"	v
WebsocketClient	index.js	/^var WebsocketClient     = require('.\/lib\/clients\/websocket.js');$/;"	v
AuthenticatedClient	index.js	/^var AuthenticatedClient = require('.\/lib\/clients\/authenticated.js');$/;"	v
Orderbook	index.js	/^var Orderbook           = require('.\/lib\/orderbook.js');$/;"	v
OrderbookSync	index.js	/^var OrderbookSync       = require('.\/lib\/orderbook_sync.js');$/;"	v
util	lib/clients/authenticated.js	/^var util = require('util');$/;"	v
querystring	lib/clients/authenticated.js	/^var querystring = require('querystring');$/;"	v
async	lib/clients/authenticated.js	/^var async = require('async');$/;"	v
signRequest	lib/clients/authenticated.js	/^var signRequest = require('..\/..\/lib\/request_signer').signRequest;$/;"	v
_.forEach	lib/clients/authenticated.js	/^var _ = {$/;"	p
request	lib/clients/authenticated.js	/^var request = require('request');$/;"	v
PublicClient	lib/clients/authenticated.js	/^var PublicClient = require('.\/public.js');$/;"	v
AuthenticatedClient	lib/clients/authenticated.js	/^var AuthenticatedClient = function(key, b64secret, passphrase, apiURI) {$/;"	f
request	lib/clients/public.js	/^var request = require('request');$/;"	v
_.forEach	lib/clients/public.js	/^var _ = {$/;"	p
Readable	lib/clients/public.js	/^var Readable = require('stream').Readable;$/;"	v
PublicClient	lib/clients/public.js	/^var PublicClient = function(productID, apiURI) {$/;"	f
API_LIMIT	lib/clients/public.js	/^var API_LIMIT = 100;$/;"	v
EventEmitter	lib/clients/websocket.js	/^var EventEmitter = require('events').EventEmitter;$/;"	v
Websocket	lib/clients/websocket.js	/^var Websocket = require('ws');$/;"	v
util	lib/clients/websocket.js	/^var util = require('util');$/;"	v
_.assign	lib/clients/websocket.js	/^var _  = {assign: require('lodash.assign')};$/;"	p
signRequest	lib/clients/websocket.js	/^var signRequest = require('..\/..\/lib\/request_signer').signRequest;$/;"	v
WebsocketClient	lib/clients/websocket.js	/^var WebsocketClient = function(productID, websocketURI, auth) {$/;"	f
RBTree	lib/orderbook.js	/^var RBTree = require('bintrees').RBTree;$/;"	v
num	lib/orderbook.js	/^var num = require('num');$/;"	v
assert	lib/orderbook.js	/^var assert = require('assert');$/;"	v
_.assign	lib/orderbook.js	/^var _ = {assign: require('lodash.assign')}$/;"	p
Orderbook	lib/orderbook.js	/^var Orderbook = function() {$/;"	f
WebsocketClient	lib/orderbook_sync.js	/^var WebsocketClient = require('.\/clients\/websocket.js');$/;"	v
PublicClient	lib/orderbook_sync.js	/^var PublicClient = require('.\/clients\/public.js');$/;"	v
Orderbook	lib/orderbook_sync.js	/^var Orderbook = require('.\/orderbook.js');$/;"	v
util	lib/orderbook_sync.js	/^var util = require('util');$/;"	v
_.forEach	lib/orderbook_sync.js	/^var _ = {$/;"	p
OrderbookSync	lib/orderbook_sync.js	/^var OrderbookSync = function(productID, apiURI, websocketURI, authenticatedClient) {$/;"	f
module.exports.signRequest	lib/request_signer.js	/^const querystring = require('querystring');$/;"	f
name	package.json	/^  "name": "gdax",$/;"	f
version	package.json	/^  "version": "0.3.0",$/;"	f
author	package.json	/^  "author": "Coinbase",$/;"	f
bugs	package.json	/^  "bugs": "https:\/\/github.com\/coinbase\/gdax-node\/issues",$/;"	f
contributors	package.json	/^  "contributors": [$/;"	f
email	package.json	/^      "email": "peterldowns@gmail.com",$/;"	f
name	package.json	/^      "name": "Peter Downs",$/;"	f
url	package.json	/^      "url": "http:\/\/peterdowns.com"$/;"	f
email	package.json	/^      "email": "maksimus16@gmail.com",$/;"	f
name	package.json	/^      "name": "Maksim Stepanenko",$/;"	f
url	package.json	/^      "url": "http:\/\/maksim.ms"$/;"	f
email	package.json	/^      "email": "miha@rebernik.info",$/;"	f
name	package.json	/^      "name": "Miha Rebernik",$/;"	f
url	package.json	/^      "url": "http:\/\/miha.rebernik.info"$/;"	f
dependencies	package.json	/^  "dependencies": {$/;"	f
async	package.json	/^    "async": "1.5.0",$/;"	f
bintrees	package.json	/^    "bintrees": "1.0.0",$/;"	f
lodash.assign	package.json	/^    "lodash.assign": "3.0.0",$/;"	f
lodash.foreach	package.json	/^    "lodash.foreach": "3.0.0",$/;"	f
lodash.partial	package.json	/^    "lodash.partial": "3.0.0",$/;"	f
nock	package.json	/^    "nock": "3.6.0",$/;"	f
num	package.json	/^    "num": "0.2.1",$/;"	f
request	package.json	/^    "request": "2.74.0",$/;"	f
ws	package.json	/^    "ws": "1.1.1"$/;"	f
description	package.json	/^  "description": "Client for the GDAX API",$/;"	f
devDependencies	package.json	/^  "devDependencies": {$/;"	f
mocha	package.json	/^    "mocha": "1.20.1"$/;"	f
directories	package.json	/^  "directories": {$/;"	f
lib	package.json	/^    "lib": ".\/lib"$/;"	f
homepage	package.json	/^  "homepage": "https:\/\/github.com\/coinbase\/gdax-node",$/;"	f
keywords	package.json	/^  "keywords": [$/;"	f
license	package.json	/^  "license": "MIT",$/;"	f
main	package.json	/^  "main": "index.js",$/;"	f
repository	package.json	/^  "repository": {$/;"	f
type	package.json	/^    "type": "git",$/;"	f
url	package.json	/^    "url": "git:\/\/github.com\/coinbase\/gdax-node.git"$/;"	f
scripts	package.json	/^  "scripts": {$/;"	f
test	package.json	/^    "test": "mocha --ui qunit --bail --reporter list tests\/*.js"$/;"	f
assert	tests/authenticated.js	/^var assert = require('assert');$/;"	v
nock	tests/authenticated.js	/^var nock = require('nock');$/;"	v
Gdax	tests/authenticated.js	/^var Gdax = require('..\/index.js');$/;"	v
key	tests/authenticated.js	/^var key = 'key';$/;"	v
secret	tests/authenticated.js	/^var secret = 'secret';$/;"	v
passphrase	tests/authenticated.js	/^var passphrase = 'passphrase';$/;"	v
EXCHANGE_API_URL	tests/authenticated.js	/^var EXCHANGE_API_URL = 'https:\/\/api.gdax.com';$/;"	v
assert	tests/orderbook.js	/^var assert = require('assert');$/;"	v
Gdax	tests/orderbook.js	/^var Gdax = require('..\/index.js');$/;"	v
checkState	tests/orderbook.js	/^var checkState = function(state, exp) {$/;"	f
assert	tests/public_client.js	/^var assert = require('assert');$/;"	v
nock	tests/public_client.js	/^var nock = require('nock');$/;"	v
Gdax	tests/public_client.js	/^var Gdax = require('..\/index.js');$/;"	v
EXCHANGE_API_URL	tests/public_client.js	/^var EXCHANGE_API_URL = 'https:\/\/api.gdax.com';$/;"	v
